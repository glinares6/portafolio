
//* USO DEL MIXIN
// @mixin crear-grid($rows,$columns,$gap){

//     display: grid;
//     grid-template-rows: repeat($rows,1fr);
//     grid-template-columns:repeat($columns,1fr) ;
//     gap: $gap;
// }

// // .header{
// //     @include center_flexbox;
// // }
// // .footer{
// //     @include center_flexbox();
// // }
// // .card{
// //     @include center_flexbox;
// // }
// $filas:5;
// $columnas:8;
// $gutters:30px;

// .header{
//     @include crear-grid(6,5,20px)
// }

// .footer{
//     @include crear-grid($filas,$columnas,$gutters)
// }

//* VALORES OPCIONALES DEL MIXIN

// @mixin grid-generation($selector, $columna-i:1,$columna-t:2, $validar:true){

//     @if($validar){
//         display: grid;
//     }

//     &_#{$selector}{
//         grid-column: #{$columna-i} / #{$columna-t};
//     }
// }

// .hero{
//     // @include grid-generation(img);
//     // @include grid-generation(title,3,-1,false);
//     // @include grid-generation(button,2,-1,false);

//     //? puede ir desordenado poniendo su argumento y su valor
//     // @include grid-generation($columna-t:4,$selector:grid,$columna-i:1,$validar:false);

//     //* si pones el argumento y su valor que necesitas ya no requiere poner el orden
//     @include grid-generation($validar:false,$selector:gap);

//     //* si pones solo el valor si deven ir en orden los argumentos

// }

//* SHORTHANDS EN MIXIN

// @mixin addImage($img,$repeat,$size){
//     position: fixed;
//     top: 0;
//     left: 0;

//     background: {
//         image:url($img);
//         repeat:$repeat;
//         size:$size;
//     }

//     animation: {
//         duration:1s;
//         name:show;
//         delay:.5s
//     }

//     margin: {
//         top: 0;
//         left: 0;
//     }
// }

// .hero{
//     @include addImage('uno.img','no-repeat','cover');
// }

//* ARGUMENTOS INDEFINIDOS EN MIXINS
// //? para agregar argumentos se debe poner 3 puntos al final del argumento del mixin
// @mixin addTransition($propiedad,$valor,$selectores...){
//     // @debug $selectores;
//     @each $selector in $selectores{
//         @debug $selector;
//         #{$selector}{
//             #{$propiedad}: $valor;

//             &:hover{
//                 #{$propiedad}: unset;
//             }
//         }
//     }
// }

// @include addTransition(opacity,0 ,'.hero','.cta',h2,h3)


// * MAPAS INPLICITOS
// @use 'sass:meta';

// @mixin crear-layout($lista...){
//     // @debug meta.keywords($lista);
    
//     //? para convertir las listas en mapas se referencia
//     @each $propiedad,$valor in meta.keywords($lista){
//         #{$propiedad} : $valor
//     }
// }

// .hero{
//     @include crear-layout($display: grid, $gap:1em, $color:red);
// }


//* @CONTENT EN MIXIN

@mixin crear-layout($rows,$columns){
    $color:#fff;
    $background:crimson;
    display: grid;
    grid-template-rows: repeat($rows,1fr);
    grid-template-columns: repeat($columns,1fr);

    @media (max-width:500px){
        @content($color,$background);
    }
}

//? para acceder a una variable dentro de las llaves de un mixin

.hero{
    @include crear-layout(5,6) using ($color,$background){
        grid-template-rows: repeat(3,1fr);
        color:$color;
        background-color: $background;
        grid-template-columns: 1fr;
        color: #000;
        &__title{
            background-color: #fff;
        }
    }
}